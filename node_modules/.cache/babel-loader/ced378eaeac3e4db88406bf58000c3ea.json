{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utkarsh Maurya\\\\Desktop\\\\MY WORK\\\\React-Files\\\\my\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [result, setResult] = useState('');\n  const [status, setStatus] = useState('');\n\n  const calculate = () => {\n    if (!height || !weight) {\n      alert(\"Please enter your height and weigth\");\n    } else {\n      let bmi = (weight / (height / 100 * (height / 100))).toFixed(2);\n      setResult(bmi);\n      let bmiStatus = getStatus(bmi);\n      setStatus(bmiStatus);\n    }\n  };\n\n  const getStatus = bmi => {\n    if (bmi < 18.5) return \"Underweight\";else if (bmi >= 18.5 && bmi < 24.9) return \"Normal\";else if (bmi >= 24.9 && bmi < 29.9) return \"Overweight\";else return \"Obese\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"BMI CALCULATOR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"height\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"h\",\n          children: \"Height\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Heigth\",\n          value: height,\n          onChange: e => setHeight(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weight\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"w\",\n          children: \"Weigth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Weight\",\n          value: weight,\n          onChange: e => setWeight(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculate,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result\",\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"Pt+x0vm4jk5sxFJpSTzFv9YXUZ8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Utkarsh Maurya/Desktop/MY WORK/React-Files/my/src/App.jsx"],"names":["React","useState","App","height","setHeight","weight","setWeight","result","setResult","status","setStatus","calculate","alert","bmi","toFixed","bmiStatus","getStatus","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBH,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACI,MAAD,EAAQC,SAAR,IAAmBL,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACM,MAAD,EAAQC,SAAR,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACQ,MAAD,EAAQC,SAAR,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMU,SAAS,GAAC,MAAI;AAChB,QAAG,CAACR,MAAD,IAAS,CAACE,MAAb,EAAoB;AAChBO,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH,KAFD,MAGI;AACA,UAAIC,GAAG,GAAC,CAACR,MAAM,IAAGF,MAAM,GAAC,GAAR,IAAcA,MAAM,GAAC,GAArB,CAAF,CAAP,EAAqCW,OAArC,CAA6C,CAA7C,CAAR;AACAN,MAAAA,SAAS,CAACK,GAAD,CAAT;AACA,UAAIE,SAAS,GAACC,SAAS,CAACH,GAAD,CAAvB;AACAH,MAAAA,SAAS,CAACK,SAAD,CAAT;AACH;AACJ,GAVD;;AAcA,QAAMC,SAAS,GAAEH,GAAD,IAAO;AACnB,QAAGA,GAAG,GAAC,IAAP,EAAa,OAAO,aAAP,CAAb,KACK,IAAGA,GAAG,IAAE,IAAL,IAAYA,GAAG,GAAC,IAAnB,EAAyB,OAAO,QAAP,CAAzB,KACA,IAAGA,GAAG,IAAE,IAAL,IAAYA,GAAG,GAAC,IAAnB,EAAyB,OAAO,YAAP,CAAzB,KACA,OAAO,OAAP;AACR,GALD;;AAQA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACA;AAAG,UAAA,SAAS,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,mBAA/B;AAAoD,UAAA,KAAK,EAAEV,MAA3D;AAAmE,UAAA,QAAQ,EAAGc,CAAD,IAAKb,SAAS,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAA3F;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACA;AAAG,UAAA,SAAS,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,mBAA/B;AAAmD,UAAA,KAAK,EAAEd,MAA1D;AAAkE,UAAA,QAAQ,EAAGY,CAAD,IAAKX,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1F;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAWI;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAQ,QAAA,OAAO,EAAER,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAG,QAAA,SAAS,EAAC,QAAb;AAAA,kBAAuBJ;AAAvB;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AAAA,kBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAoBH,CAjDD;;GAAMP,G;;KAAAA,G;AAmDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst App = () => {\r\n\r\n    const [height,setHeight]=useState('')\r\n    const [weight,setWeight]=useState('')\r\n    const [result,setResult]=useState('')\r\n    const [status,setStatus]=useState('')\r\n\r\n    const calculate=()=>{\r\n        if(!height||!weight){\r\n            alert(\"Please enter your height and weigth\");\r\n        }\r\n        else{\r\n            let bmi=(weight/((height/100)*(height/100))).toFixed(2);\r\n            setResult(bmi);\r\n            let bmiStatus=getStatus(bmi);\r\n            setStatus(bmiStatus);\r\n        }\r\n    }\r\n     \r\n\r\n\r\n    const getStatus=(bmi)=>{\r\n        if(bmi<18.5) return \"Underweight\";\r\n        else if(bmi>=18.5&& bmi<24.9) return \"Normal\"\r\n        else if(bmi>=24.9&& bmi<29.9) return \"Overweight\"\r\n        else return \"Obese\"\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>BMI CALCULATOR</h1>\r\n            <div className=\"height\">\r\n            <p className=\"h\">Height</p>\r\n            <input type=\"text\" placeholder=\"Enter your Heigth\"  value={height} onChange={(e)=>setHeight(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className=\"weight\">\r\n            <p className=\"w\">Weigth</p>\r\n            <input type=\"text\" placeholder=\"Enter your Weight\" value={weight} onChange={(e)=>setWeight(e.target.value)}/>\r\n            </div>\r\n            <br />\r\n            <button onClick={calculate}>Check</button>\r\n            <p className=\"result\">{result}</p>\r\n            <p>{status}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}